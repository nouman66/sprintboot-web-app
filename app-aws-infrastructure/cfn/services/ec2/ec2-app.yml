AWSTemplateFormatVersion: '2010-09-09'
Description: "cfn ec2 template"
Parameters:
  author:
    Type: String
    Default: ''
    Description: Name of the author
  awsEnv:
    Type: String
    Default: dev
    AllowedValues: [dev, qa, uat, test, uat-dr, prod, prod-dr,stage, dr]
  project:
    Type: String
    Description: Name of the project
  app:
    Type: String
    Description: Name of the application
  instanceType:
    Type: String
    Description: EC2 instance type
  imageId:
    Type: AWS::EC2::Image::Id
    Description: image ID for EC2 instance
  iamInstanceProfile:
    Type: String
    Default: ''
    Description: Arn
  keyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: key pair 
    Default: ''
  securityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: ec2 security groups
  subnetId:
    Type: AWS::EC2::Subnet::Id
    Description: SubnetId
  rootBlockDeviceName:
    Type: String
    Default: '/dev/sda1'
    Description: root device name
  rootBlockDeviceSize:
    Type: String
    Default: ''
    Description: root device size
  blockDevice1Size:
    Type: String
    Default: ''
    Description: drive 1 size
  blockDevice2Size:
    Type: String
    Default: ''
    Description: drive 2 size
  blockDevice1Name: 
    Type: String
    Default: ''
    Description: drive 1 name
  blockDevice2Name: 
    Type: String
    Default: ''
    Description: drive 2 name
  ec2Name:
    Type: String
    Description: Name of the EC2
  ebsEncryptionKmsKey:
    Type: String
    Default: ''
    Description: KMS key to encrypt the EBS volume
  logGroupName:
    Description: Name of the CloudWatch Log Group
    Type: String
  EC2InstanceRole:
    Type: String

Resources:


  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - Ref: EC2InstanceRole

  ec2Instance:
    DependsOn: EC2InstanceProfile
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref instanceType
      ImageId: !Ref imageId
      SubnetId: !Ref subnetId
      SecurityGroupIds: !Ref securityGroups
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y amazon-cloudwatch-agent

            cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json <<EOL
            {
              "logs": {
                "logs_collected": {
                  "files": {
                    "collect_list": [
                      {
                        "file_path": "/var/log/messages",
                        "log_group_name": "${logGroupName}",
                        "log_stream_name": "{instance_id}",
                        "timezone": "Local"
                      }
                    ]
                  }
                }
              }
            }
            EOL

            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
            systemctl enable amazon-cloudwatch-agent
      KeyName: !Ref keyName
      Tags:
        - Key: Project
          Value: !Sub "${project}"
        - Key: Env
          Value: !Sub "${awsEnv}"
        - Key: Name
          Value: !Ref ec2Name
      IamInstanceProfile: !Ref EC2InstanceProfile

Outputs:
  ec2Instance:
    Value: !Ref ec2Instance
    Export:
      Name: !Sub 'ec2-Instance-${project}-${awsEnv}-${app}-${AWS::Region}'

    
    